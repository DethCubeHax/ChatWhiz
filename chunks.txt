Personal Statement: 
I’m Nafis Ul Islam, a final year student studying Computer Science at the University of Hong 
Kong. My interests are in robotics, AI, LLMs and anything to do with computers. I am 22 years 
old, male, pronouns he/him, born on 17 August 2002. My nation is Bangladesh. I have the 
following projects, work experiences and publications: 
 
Work Experiences (4): 
Standard Chartered Bank - FinTech Analyst (July 2024 – Aug 2024) 
HKU Student Research Assistant - Robotics (January 2024 - May 2024) 
Kodifly Limited - Software Engineer (May 2023 - August 2023) 
HKU Student Research 

 I have the 
following projects, work experiences and publications: 
 
Work Experiences (4): 
Standard Chartered Bank - FinTech Analyst (July 2024 – Aug 2024) 
HKU Student Research Assistant - Robotics (January 2024 - May 2024) 
Kodifly Limited - Software Engineer (May 2023 - August 2023) 
HKU Student Research Assistant - VR (May 2022 - April 2023) 
 
 
Projects (4): 
CourseSage HKU: A Course Selection Assistant Platform 
World Record-Breaking Robotic Fish 
ENGG1340 Group Project - Sudoku  
Personal Portfolio – NafisUI.com 
 
 
Publications, Research, Research Paper (1): 
Implementation of a Cost-Effective Underwater Communications System  

CourseSage HKU: A Course Selection Assistant Platform – by Nafis Ul Islam 
I'm thrilled to introduce CourseSage HKU, a platform I developed to help HKU students make 
smart course choices by collecting data from various sources. With CourseSage, I provide 
insights into course performance and student reviews using a regression model that analyzes 
course grades with numpy and pandas for efficient data handling and management. JSON and IO 
are used to export the data. For understanding course reviews, I use Natural Language Processing 
with the RoBERTa model and Huggingface Transformers 

 For understanding course reviews, I use Natural Language Processing 
with the RoBERTa model and Huggingface Transformers Pipeline. This helps me analyze 
student sentiment on course load, coursework, and grading curves, generating review dataframes 
using numpy and pandas. I've also included a dedicated web scraper to extract course data and 
user reviews. The scraper makes API calls to collect comprehensive data, including scores and 
grades. I sort courses by grades and reviews with a standardized grading model and sentiment 
analysis data, visualizing patterns with matplotlib.

 I sort courses by grades and reviews with a standardized grading model and sentiment 
analysis data, visualizing patterns with matplotlib. My technical infrastructure includes libraries 
like numpy, pandas, Huggingface Transformers, the RoBERTa model, matplotlib, JSON, and OS 
for system operations. All the processed data is stored in CSV format for easy access and 
streamlined manipulation. My user interface allows you to interactively sort courses by grades 
and reviews to guide your selection. To get started, you can clone the repository, install the 
dependencies, and run a scraper for data collection, which is then processed 

 To get started, you can clone the repository, install the 
dependencies, and run a scraper for data collection, which is then processed by analysis tools 
through my platform interface. I support community contributions and welcome pull requests. 
You can also report issues on GitHub or reach out to support at nafisulislam2k2@gmail.com. My 
goal with CourseSage HKU is to simplify course selection and provide detailed insights into 
course performance. 
 
 
 
 
 
  

World Record-Breaking Robotic Fish: A Technical Deep Dive – by Nafis Ul Islam 
I'm thrilled to present this project, which achieved the Guinness World Record for the fastest 
swimming speed in robotic fish, spearheaded by me as Embedded Systems Technical Lead at 
BREED HKU. This remarkable project seamlessly combined complex mathematical models, 
real-time control systems, and custom hardware solutions to achieve its goals. Propulsion 
System Technical Details: The fish employs a hybrid propulsion system that integrates a main 
motor drive with servo-controlled fins.

 Propulsion 
System Technical Details: The fish employs a hybrid propulsion system that integrates a main 
motor drive with servo-controlled fins. Position tracking is achieved using the formula: Position 
= encoderCounts / (4 × 49 × 125), where the encoder resolution is 4, the gear ratio is 49, and 
there are 125 counts per encoder tick. Speed control is handled by the formula: PWM = 1500 + 
(speed/9) × 500, mapping a 0-9 speed input to the 1500-2000μs range. Fin Control 
Mathematics: The attack angle is determined using the formula: θ = ((R × maxAngle/80) + (S × 
P × maxAngle/80)) + 90° + C.

 Fin Control 
Mathematics: The attack angle is determined using the formula: θ = ((R × maxAngle/80) + (S × 
P × maxAngle/80)) + 90° + C. Here, R represents roll input (10-90), P represents pitch input (10-
90), S is the side coefficient (±1), C denotes the calibration offset, and the maximum angle 
(maxAngle) is 50 degrees. Communication Specifications: The communication protocol 
utilizes 8-bit packets with odd parity, with controller transmission at 19200 baud and fish 
reception at 115200 baud. The message structure follows the format 
[c][speed][pitch][yaw][roll][e], where speed values range from 0-9, pitch from 10-90 

 The message structure follows the format 
[c][speed][pitch][yaw][roll][e], where speed values range from 0-9, pitch from 10-90 degrees, 
yaw from 1-9, and roll from 10-90 degrees. Motion Control Formulas: The effective thrust is 
calculated as: effectiveThrust = baseThrust × cos(turnAngle), while the turn rate is determined 
by: turnRate = yawInput × (maxTurnRate/9). Turn efficiency follows the relationship: 
turnEfficiency = f(motorPosition, speed, finAngle). Safety Features: The system includes 
several safety mechanisms, such as a 3-second communication timeout, a kill switch with a 
hardware interrupt, and a home 

 Safety Features: The system includes 
several safety mechanisms, such as a 3-second communication timeout, a kill switch with a 
hardware interrupt, and a home position calibration system to ensure safe operation. Multiple kill 
switch mechanisms and automated fault detection are in place, along with established emergency 
recovery procedures. Performance Achievements: The system achieved a record-breaking 
swimming speed, maintaining control latency below 100ms. The design optimizes the turn radius 
for space-constrained environments and extends the operational duration.

 The design optimizes the turn radius 
for space-constrained environments and extends the operational duration. The system also 
demonstrates reliable recovery from communication loss and environmental adaptability through 
various condition testing. Hardware Components: Custom PCB development integrates power 
management systems, signal conditioning, motor driver integration, and sensor interfaces. The 
controller board processes analog inputs and includes status indication systems. Technical 
Innovations: The project introduced several technical innovations, including the development of 
a 

 Technical 
Innovations: The project introduced several technical innovations, including the development of 
a position-aware turning algorithm, implementation of an adaptive fin control system, design of a 
robust communication protocol, creation of custom PCB solutions, achievement of IP68 rating 
for waterproofing, and design of thermal modeling and cooling systems. Project Conclusions: 
This project successfully integrated complex mathematical models, effectively implemented real-
time control systems, and proved the success of custom hardware solutions.

 Project Conclusions: 
This project successfully integrated complex mathematical models, effectively implemented real-
time control systems, and proved the success of custom hardware solutions. The world record 
achievement validated the technical approach, making this project a benchmark in robotic fish 
development. The development combined theoretical knowledge with practical engineering, 
showcasing an exemplary blend of innovation and technical prowess. 
 
  

ENGG1340 Group Project - Sudoku Implementation Documentation – by Nafis Ul Islam 
I’m excited to introduce this Sudoku game, implemented in C++ using standard libraries, which 
operates on a 9x9 grid following traditional Sudoku rules. No number can be repeated in any 
row, column, or 3x3 grid. To get started, you’ll need to compile the program using the make 
command: "make sudoku". If you need a clean build, run "make clean" followed by "make 
sudoku". You can then execute the compiled program with the command ".

 If you need a clean build, run "make clean" followed by "make 
sudoku". You can then execute the compiled program with the command "./sudoku".Players can 
start a new game, load a saved game, or view instructions. The game automatically saves your 
progress when you exit. You navigate the grid using the w, a, s, d keys followed by enter, and 
you can enter numbers 1-9 into empty cells. Numbers will only be accepted if they adhere to 
Sudoku rules, and pre-filled cells cannot be modified. You win by correctly filling all the empty 
cells.

 Numbers will only be accepted if they adhere to 
Sudoku rules, and pre-filled cells cannot be modified. You win by correctly filling all the empty 
cells. You earn 1 point for each valid move. Erasing numbers will increase your step count but 
won’t award any points. Your score is compared against the computer's solution, and victory is 
achieved by completing the puzzle in fewer steps than the computer. 
 
 
 
 
   Smart Display Clock with Temperature Monitoring and Alarm System – by Nafis Ul Islam 
I'm thrilled to introduce this feature-rich digital clock, which not only displays the date, time, and 
current temperature but also offers customizable alarms and extensive settings on a touchscreen 
interface. It functions as a versatile digital clock with a large digital format display, showing the 
current date and day of the week. The visual temperature gauge adds to its aesthetic appeal, and 
touchable buttons enable easy user interaction.

 The visual temperature gauge adds to its aesthetic appeal, and 
touchable buttons enable easy user interaction. The time can be shown in either 12-hour or 24-
hour format, with the full date including the month name and year. The display updates every 
minute, maintaining accurate time through the RTC (Real-Time Clock). Temperature monitoring 
is another key feature, showing the current temperature in Celsius both numerically and with a 
visual thermometer. It records temperature logs throughout the day and saves this data to an SD 
card for later analysis.

 It records temperature logs throughout the day and saves this data to an SD 
card for later analysis. The alarm system supports up to five different alarm times, with options 
to enable or disable alarms, stop or snooze them, and provides both visual and audible alerts. The 
user interface responds to touch input, making navigation intuitive. It includes an options menu 
for settings, allowing users to switch between time formats and manage alarms easily. Data 
logging capabilities include creating daily temperature log files stored in CSV format for easy 
analysis, with files automatically 

 Data 
logging capabilities include creating daily temperature log files stored in CSV format for easy 
analysis, with files automatically named by date. Users can enable or disable the logging feature 
as needed. Various settings options are available, including time format selection, alarm 
management, temperature logging controls, and display preferences. Visual elements are well 
thought out, using custom background images and featuring an animated temperature display. 
The clear, readable time digits and visual feedback for touch actions ensure a pleasant user 
experience.

 
The clear, readable time digits and visual feedback for touch actions ensure a pleasant user 
experience. Power management is efficient, with the RTC maintaining time during power loss, 
an efficient screen refresh system, and optimized temperature sampling. Storage features include 
using an SD card for data storage, saving temperature logs, storing system settings, and 
managing background images. Hardware integration combines a touchscreen interface, integrates 
a temperature sensor, uses a real-time clock module, and includes an alarm buzzer, making this 
digital clock a highly functional and 

 Hardware integration combines a touchscreen interface, integrates 
a temperature sensor, uses a real-time clock module, and includes an alarm buzzer, making this 
digital clock a highly functional and user-friendly device. If you have any questions or need 
further details, feel free to ask! 
 
 
 
 
 
 
   Personal Portfolio – NafisUI.com  – by Nafis Ul Islam 
Let me introduce you to an impressive modern portfolio website that leverages the latest 
technologies such as Next.js 13+ and React 18+ to create a dynamic and engaging user 
experience. This platform is designed to showcase professional experience, projects, research 
work, and blog posts with a responsive design and smooth animations. One of its standout 
features includes interactive particle animations that respond to user interactions, providing a 
visually captivating background.

 One of its standout 
features includes interactive particle animations that respond to user interactions, providing a 
visually captivating background. Additionally, the site integrates an AI chatbot that offers real-
time chat capabilities, enhancing user engagement by providing instant responses and navigating 
commands efficiently. The layout of the website is meticulously structured, with RootLayout 
managing the overall wrapper, MainLayout handling the responsive layout and particle 
background, and PageLayout ensuring a consistent page structure with features like typewriter 
effects and social media links.

overall wrapper, MainLayout handling the responsive layout and particle 
background, and PageLayout ensuring a consistent page structure with features like typewriter 
effects and social media links. Installation and setup of this website are straightforward, 
involving cloning the repository, installing dependencies and required packages, setting up 
environment variables, and running the development server. The architecture follows a clear file 
structure and component hierarchy, ensuring maintainability and scalability. Core layout 
components like RootLayout, MainLayout, and PageLayout manage different aspects of the user 
interface, while feature components cater to specific needs 

 Core layout 
components like RootLayout, MainLayout, and PageLayout manage different aspects of the user 
interface, while feature components cater to specific needs such as the Home Page, Projects 
Page, Work Experience Page, Blog Page, and the AI Chatbot. Each of these pages is designed to 
provide detailed information through various interactive elements like PhotoFrame, timeline 
layouts, interactive project cards, tool tags, image galleries, blog post cards, and Markdown 
content support.Performance optimization is a critical focus of this website, employing strategies 
such as Vercel Analytics and Speed Insights to ensure efficient loading times and a 

Performance optimization is a critical focus of this website, employing strategies 
such as Vercel Analytics and Speed Insights to ensure efficient loading times and a seamless user 
experience. The website uses lazy loading, dynamic imports, route-based splitting, and 
component lazy loading to optimize performance further. State management is handled 
efficiently through local and session storage, while network optimization techniques like API 
request batching and response caching enhance overall performance. The code implementation 
includes notable features such as a particle physics engine for dynamic particle updates based on 
user interactions, a 

 The code implementation 
includes notable features such as a particle physics engine for dynamic particle updates based on 
user interactions, a custom typewriter effect for dynamic text display, and various other 
interactive elements like hover effects and page transitions. The user interface is designed to be 
highly responsive, following a mobile-first approach with fluid typography, adaptive layouts, and 
touch-friendly interactions. The Navbar component, for example, is designed with responsive 
design principles, animated transitions, and social media integration to enhance navigation.

 The Navbar component, for example, is designed with responsive 
design principles, animated transitions, and social media integration to enhance navigation. The 
ParticleBackground component features interactive particles with mouse tracking and dynamic 
connection lines, adding to the visual appeal. Content management is streamlined through JSON-
based content, dynamic routing, Markdown support, and image optimization, ensuring that the 
website remains easy to update and manage. Finally, the development guidelines emphasize a 
consistent code style, meaningful component names, proper error boundaries, and 
comprehensive comments to ensure 

 Finally, the development guidelines emphasize a 
consistent code style, meaningful component names, proper error boundaries, and 
comprehensive comments to ensure maintainability. The Git workflow is structured for feature 
development and bug fixes, while testing and deployment processes are well-defined to facilitate 
smooth development and production transitions. Contributing to the project is encouraged, with 
clear guidelines for forking the repository, creating feature branches, and submitting pull 
requests. All these aspects make this portfolio website an exemplary project that combines 
modern web development practices with innovative features 

 All these aspects make this portfolio website an exemplary project that combines 
modern web development practices with innovative features to create an engaging and user-
friendly platform. 
 
  

Standard Chartered Bank - FinTech Analyst (July 2024 – Aug 2024) 
I, Nafis Ul Islam, a FinTech Analyst at the time, worked on the following: In my role within 
the SME Banking division, I specialized in digital transformation initiatives, focusing on 
financial services innovation and working with enterprise-level banking systems. I led the end-
to-end development of the SME Express platform, implementing secure digital signature 
systems, robust ID verification protocols, and straight-through processing workflows, while 
designing user-friendly interfaces and integrating with existing 

 implementing secure digital signature 
systems, robust ID verification protocols, and straight-through processing workflows, while 
designing user-friendly interfaces and integrating with existing banking infrastructure. My 
contributions to Project Keystone included spearheading digital onboarding solutions, 
collaborating with HKMA on regulatory compliance, developing a Know-Your-Customer 
(KYC) proof of concept, implementing automated verification systems, and ensuring regulatory 
compliance and security standards. I also led digital payment initiatives, designing partnership 
program frameworks, integrating multiple payment systems, establishing merchant onboarding 
processes, 

 I also led digital payment initiatives, designing partnership 
program frameworks, integrating multiple payment systems, establishing merchant onboarding 
processes, creating transaction monitoring systems, implementing fraud detection measures, and 
developing reporting and analytics dashboards. For the E-commerce Financing Program, I led 
the second phase of development, creating risk assessment models, implementing automated 
approval systems, developing credit scoring algorithms, establishing merchant qualification 
criteria, and creating monitoring and reporting systems.

 For the E-commerce Financing Program, I led 
the second phase of development, creating risk assessment models, implementing automated 
approval systems, developing credit scoring algorithms, establishing merchant qualification 
criteria, and creating monitoring and reporting systems. Throughout these projects, I applied my 
technical skills in digital platform architecture, payment processing systems, e-commerce 
integration, database management, security protocols, API development, system integration, and 
user interface design.  

HKU Student Research Assistant - Robotics (January 2024 - May 2024) 
I, Nafis Ul Islam, a Research Assistant at the time, worked on the following: In this project, I 
spearheaded several high-level technical integrations and system implementations, focusing on 
enhancing robotics and machine learning capabilities. I developed LLM-based control systems 
that utilized natural language processing and command interpretation algorithms, establishing 
robust robot control protocols and building semantic understanding systems with context 
awareness features.

systems 
that utilized natural language processing and command interpretation algorithms, establishing 
robust robot control protocols and building semantic understanding systems with context 
awareness features. For the camera system implementation, I configured the Intel RealSense 
D435 depth camera and developed spatial awareness algorithms, frame transformation systems, 
and real-time calibration, alongside error correction mechanisms and visual feedback systems. In 
the domain of text-to-image classification, I led research on various classification models, 
evaluated multiple model architectures, implemented object recognition systems, and developed 
methods to improve accuracy.

classification, I led research on various classification models, 
evaluated multiple model architectures, implemented object recognition systems, and developed 
methods to improve accuracy. I also created rigorous testing and validation protocols and 
established comprehensive performance metrics. Within the ROS environment, I directed the 
creation of MoveIt simulations, implemented advanced motion planning algorithms, developed 
collision avoidance systems, optimized path planning, and built performance monitoring tools 
along with testing frameworks. My technical integration work included the implementation of 
the ROS framework, development of Python-based control systems, 

 My technical integration work included the implementation of 
the ROS framework, development of Python-based control systems, OpenCV image processing, 
machine learning model deployment, real-time system coordination, and data collection and 
analysis. These efforts culminated in a cohesive and sophisticated system capable of advanced 
robotic functions and intelligent decision-making.  

Kodifly Limited - Software Engineer (May 2023 - August 2023) 
I, Nafis Ul Islam, a Software Engineer at the time, worked on the following: In this project, I 
led the development of a sophisticated visualizer, integrating advanced technologies to enhance 
functionality and user experience. The visualizer development involved creating a web-based 
LiDAR interface, implementing camera feed integration for real-time visualization, and building 
robust user interaction systems. I also established efficient data processing pipelines and 
optimized performance to ensure seamless operation.

 I also established efficient data processing pipelines and 
optimized performance to ensure seamless operation. For detection systems, I developed object 
detection algorithms, implemented bounding box generation, and created tracking mechanisms 
and classification systems. My efforts included developing accuracy improvements and 
implementing real-time processing to enhance detection capabilities. In collision detection, I 
created flexible systems with customizable shapes, developed spatial awareness algorithms, and 
optimized performance.

 In collision detection, I 
created flexible systems with customizable shapes, developed spatial awareness algorithms, and 
optimized performance. I also built user configuration tools and implemented rigorous testing 
protocols to ensure reliability and effectiveness. During the Blender module development, I 
created a custom LiDAR simulation, implemented scene sampling, and developed tools for data 
collection and export mechanisms. Additionally, I established validation systems and testing 
frameworks to ensure the accuracy and integrity of the simulations.

 Additionally, I established validation systems and testing 
frameworks to ensure the accuracy and integrity of the simulations. The technical 
implementation encompassed Vite.JS for frontend development, ROS system integration, 
Blender plugin development, Python backend systems, Three.JS for visualization, and 
comprehensive data processing pipelines. These efforts combined to deliver a robust, interactive, 
and high-performance visualizer system.  

HKU Student Research Assistant - VR (May 2022 - April 2023) 
I, Nafis Ul Islam, a Research Assistant at the time, worked on the following: In my role 
focusing on digital twin development, I created a complete model of the Innovation Wing, 
implementing detailed texturing, advanced lighting systems, and building interactive elements. I 
also developed navigation systems and optimized performance to ensure a seamless user 
experience. For VR integration, I developed compatibility features, created interaction systems, 
and implemented user movement to build immersive experiences.

 For VR integration, I developed compatibility features, created interaction systems, 
and implemented user movement to build immersive experiences. This included developing 
comfort features and multi-user capabilities to enhance the overall VR environment. During the 
event implementation phase, I supported the Engineering Innoshow by creating virtual event 
spaces, implementing visitor tracking, and developing presentation areas. I also built interaction 
zones and created event management tools to facilitate smooth event operations. My educational 
contributions involved developing teaching materials, creating practical exercises, 

 My educational 
contributions involved developing teaching materials, creating practical exercises, leading 
workshop sessions, providing technical support, creating documentation, and implementing 
feedback systems to enhance learning experiences. Throughout these projects, I applied a wide 
range of technical skills, including Unity development, Blender modeling, Quest SDK 
implementation, VR optimization, asset management, performance tuning, user experience 
design, and event system integration.

 Throughout these projects, I applied a wide 
range of technical skills, including Unity development, Blender modeling, Quest SDK 
implementation, VR optimization, asset management, performance tuning, user experience 
design, and event system integration. These efforts combined to create a sophisticated and 
interactive digital environment, enhancing both technical capabilities and user engagement. 
 

 
 
 
Design and Implementation of a Cost-Efficient Underwater 
Communication System 
7th International Symposium on Academic Makerspaces 
ISAM 
2023 
Student 
Poster 
No.: 
78 
N.U. Islam1, K.L. Chung2, and T.J.K. Ng3 a 
1N.U. Islam; Dept. of Computer Science, The University of Hong Kong; e-mail: u3583557@connect.hku.hk 
2K.L. Chung; Dept. of Electrical and Electronic Eng., The University of Hong Kong; e-mail: lok1205@connect.hku.hk 
3T.J.K. Ng; Dept. of Mechanical Eng., The University of Hong Kong; e-mail: timng@connect.

, The University of Hong Kong; e-mail: lok1205@connect.hku.hk 
3T.J.K. Ng; Dept. of Mechanical Eng., The University of Hong Kong; e-mail: timng@connect.hku.hk 
 
Introduction 
A project on underwater bio-inspired robots, which may find 
application in ocean exploration, underwater sensing, and 
marine research, was initiated by group of students from 
different faculties. With the technical and financial support 
from Tam Wing Fan I nnovation Wing, an academic 
Makerspace at the University of Hong Kong, t he team had 
developed a robotic fish which broke the world record  [1].  With the technical and financial support 
from Tam Wing Fan I nnovation Wing, an academic 
Makerspace at the University of Hong Kong, t he team had 
developed a robotic fish which broke the world record  [1]. 
Recognizing the importance of communication between the 
control stations and the robots, the group continued to develop 
a stable and robust communication system on a low budget. 
This paper presents our prototyping, methodology and the 
performance of the system. 
Design and Implementation 
We developed our prototype using Arduino. Arduino  is an 
open-source microcontroller platform commonly used in 
electronics projects [2].

 
Design and Implementation 
We developed our prototype using Arduino. Arduino  is an 
open-source microcontroller platform commonly used in 
electronics projects [2]. The affordable and flexible platform 
is an appropriate option for our project. The communication 
module we used is APC220. APC220 is a radio  
communication module that operates at 434MHz [3], which 
is suitable for underwater communications. 
Our system primarily consists of a signal emitter and a 
receiver. The emitter, an Arduino Nano, contains different 
sensors to read manual input, simulating an actual operation 
of a controller.

 The emitter, an Arduino Nano, contains different 
sensors to read manual input, simulating an actual operation 
of a controller. An Arduino UNO receiver contains an LED 
that illuminates when the signal is received correctly. 
 
Figure 1: The signal emitter (left) and signal receiver (right) 
 
The emitter is developed to simulate real -life controller 
operations. It consists of two joysticks, one potentiometer, 
and two switches. The joysticks control the pitch, roll, and 
yaw, while the potentiometer controls the power levels, and 
the switches act  as a rising edge kill switch to stop the 
 
a All three authors 

 The joysticks control the pitch, roll, and 
yaw, while the potentiometer controls the power levels, and 
the switches act  as a rising edge kill switch to stop the 
 
a All three authors contributed equally to the project. 
movement and as a home switch that reset the control values. 
These values would be sent to the receiver in one array. 
However, the receiver would not decode the received 
command and only control the LED, indicating  the 
communication status. 
We have designed and replicated circuit  boards for both the 
receiver and emitter. The emitter’s system features a robust 
PCB (Printed circuit board)  design for secure electrical 
connections between components 

 The emitter’s system features a robust 
PCB (Printed circuit board)  design for secure electrical 
connections between components and allows for expansion 
via UART (Universal Asynchronous Receiver/Transmitter). 
The design features an Arduino Nano as the microcontroller 
primarily due to its breadboard -friendly, comp act design, 
connected to two a pair of twin -axis joysticks, a standalone 
potentiometer, as well as embedded push buttons for other 
inputs, as well as a red and green LED to indicate the state of 
the controller.


connected to two a pair of twin -axis joysticks, a standalone 
potentiometer, as well as embedded push buttons for other 
inputs, as well as a red and green LED to indicate the state of 
the controller.  
 
Figure 2: Schematic of the signal emitter 
In the emitter’ s PCB, we used readily available and 
inexpensive off-the-shelf components, which can improve the 
reliability of the user's input  while retaining cost -
effectiveness. Four 47nF non -polar tantalum capacitors are 
connected in parallel between the signal and gr ound lines of 
the joysticks to eliminate high -frequency noise from the 
joysticks by acting as low -pass filters , combined with 
software calibration to counteract 

 Four 47nF non -polar tantalum capacitors are 
connected in parallel between the signal and gr ound lines of 
the joysticks to eliminate high -frequency noise from the 
joysticks by acting as low -pass filters , combined with 
software calibration to counteract their drift due to wear and 
tear. To power the entire system, we opted for a ubiquitous 
LM7805CTG linear voltage regulator, which provides a 


 
 
regulated 5V supply [4] to all the components from a typical 
2-4 cell Li-ion/Li-Po battery with a standard voltage range of 
3.2-4.3V per cell, connected in series. To connect the battery, 
a universal 2.1mm inner diameter, and 5.5mm outer diameter 
with a positive tip to prevent reverse connection and maintain 
standards with other similar boards, such as the Arduino Uno. 
The system is programmable through a USB to UART 
interface present onboard the Arduino Nano, and the board 
itself features additional power distribution capabilities to 
power the additional components from USB to 

 
The system is programmable through a USB to UART 
interface present onboard the Arduino Nano, and the board 
itself features additional power distribution capabilities to 
power the additional components from USB to aid in testing 
environments. A pair of 220ohm resistors are also connected 
in series to the LEDs to lower their voltage  and protect the 
LEDs. 
For the receiver ’s circuit design, we used the traditional  
Arduino Uno due to its availability and extensive support built 
over the years. To demonstrate signal reception, we set up a 
system where an LED connected to Pin 13 of the Arduino Uno 
will flash red whenever a signal is received from the controller.

 To demonstrate signal reception, we set up a 
system where an LED connected to Pin 13 of the Arduino Uno 
will flash red whenever a signal is received from the controller. 
 
Figure 3: Schematic of the signal receiver 
Methodology  
To simulate a real-life operating environment. We carried out 
the t esting in a pool. The emitter is placed around 90 
centimeters above the ground. The receiver is placed 53 
centimeters underwater. Between the emitter and the receiver, 
there is a wall that is 29.5 centimeters thick. The emitter 
would emit signals from 0 meters. The emitter would be 
moved away from the receiver 2 meters by 2 meters until the 
signal becomes 

 The emitter would be 
moved away from the receiver 2 meters by 2 meters until the 
signal becomes unstable and until the signal is lost 
completely. The communication is considered stable when  
the LED of the receiver is on continuously, unstable when the 
LED is flashing, and lost when the LED powers off entirely. 
 
Figure 4: Experimental environment setup 
Results 
The LED status of the receiver would be recorded at each 
checkpoint until the signal was lost completely. Table 1 
presents the result of the experiment.

 
 
Figure 4: Experimental environment setup 
Results 
The LED status of the receiver would be recorded at each 
checkpoint until the signal was lost completely. Table 1 
presents the result of the experiment. 
Checkpoint (meters) LED status 
0 - 14 Stable 
16 – 150 Unstable 
150 + Lost 
Table 1: Checkpoints’ distance and their corresponding LED status 
The results indicate that the communication between the 
emitter and the receiver is stable at the range of 0 meters to 14 
meters. The communication became unstable after the 16 
meters checkpoint , and the signal was completely lost after 
the 150 meters checkpoint.  The communication became unstable after the 16 
meters checkpoint , and the signal was completely lost after 
the 150 meters checkpoint. 
As for the cost, the receiver set cost approximately 700 HKD 
and the emitter set cost around 500 HKD (1 USD = 7.8 HKD). 
Limitations and Future Development 
The result proved that our system has a stable communication 
range of 14 meters and the communication is still working 
within 150 meters. However, the system has a few limitations, 
as follows: 
• Inability to verify the signal integrity. 
• Locating the signal’s position.

 However, the system has a few limitations, 
as follows: 
• Inability to verify the signal integrity. 
• Locating the signal’s position. 
To address these limitations, the following improvements 
could be made: 
• Implementation of a handshake communication 
The receiver shall send the signal received back to the 
emitter, and the emitter would verify if the receiver has 
received the correct signal. The verified signal could act 
as a command in controlling the robot’s movement. 
Feature of indicating the verific ation status shall be 
implemented on both the emitter and receiver as well.

 
Feature of indicating the verific ation status shall be 
implemented on both the emitter and receiver as well. 
• Implementation of trilateration positioning method  
Multiple emitters would be deployed, and by checking 
the communication status of each emitter. The 
approximate location of the r eceiver can be identified, 
meaning the position of the robot can be located given 
such a system is applied and implemented. 
We also plan to  explore the viability of implementing the 
system on underwater robot control, such as the robotic fish 
developed by the MARS LAB at the University of Hong 
Kong [5].

 
We also plan to  explore the viability of implementing the 
system on underwater robot control, such as the robotic fish 
developed by the MARS LAB at the University of Hong 
Kong [5]. 
Conclusion 
Utilizing Arduino along with the APC220 radio 
communications module provides stable and cost -efficient 
underwater communication up to 14 meters. Future work will 
involve further enhancements, including handshake 
communications and signal verification. The system 
performance shall be re -evaluated after the enhancements.  
The cost effectiveness and simplicity of the design would 
enable development in makerspaces with limited funding, 
such as those in developing nations.

  
The cost effectiveness and simplicity of the design would 
enable development in makerspaces with limited funding, 
such as those in developing nations. 
  


 
 
Acknowledgement 
This project is made possible with financial and technical 
support from Tam Wing Fan Innovation Wing 
(https://innowings.engg.hku.hk/), a Makerspace at the 
University of Hong Kong . We would like to thank Dr. C.K. 
Chui, Prof. George Tham, and Mr. R.C.K. Chan from Tam 
Wing Fan Inno vation Wing for their technical and academic 
advice. We also express our gratitude to student members of 
BREED HKU (https://innowings.engg.hku.hk/breed2022/), a 
bio-robotics student society under Tam Wing Fan Innovation 
Wing.

 We also express our gratitude to student members of 
BREED HKU (https://innowings.engg.hku.hk/breed2022/), a 
bio-robotics student society under Tam Wing Fan Innovation 
Wing. 
 
References 
 
[1]  T. J. K. Ng, N. Chen and F. Zhang, "Snapp: An Agile 
Robotic Fish With 3-D Maneuverability for Open 
Water Swim," IEEE Robotics and Automation 
Letters, vol. 8, no. 10, pp. 6499-6506, 2023.  
[2]  A. Nayak, N. Hiremath, U. F. M, V. Garagad and S. 
Chickerur, "Teaching Microcontrollers - using 
Arduino as a Platform," in 2022 IEEE Global 
Engineering Education Conference (EDUCON), 
2022.

 
Chickerur, "Teaching Microcontrollers - using 
Arduino as a Platform," in 2022 IEEE Global 
Engineering Education Conference (EDUCON), 
2022.  
[3]  S. A. Meybodi, M. Dohler, A. N. Askarpour, J. 
Bendtsen and J. D. Nielsen, "The Feasibility of 
Communication Among Pumps in a District Heating 
System," IEEE antennas & propagation magazine, 
vol. 55, no. 3, pp. 118-134, 2013.  
[4]  N. P. Burnett, R. Seabra, M. de Pirro, D. S. Wethey, 
S. A. Woodin, B. Helmuth, M. L. Zippay, G. Sarà, C. 
Monaco and F. P. Lima, "An improved noninvasive 
method for measuring heartbeat of intertidal 
animals," Limnology and Oceanography, Methods, 
vol.

 Lima, "An improved noninvasive 
method for measuring heartbeat of intertidal 
animals," Limnology and Oceanography, Methods, 
vol. 11, no. 2, pp. 91-100, 2013.  
[5]  Ng, Timothy ; Chen, Nan; Zhang, Fu, "YouTube," 
MARS LAB HKU, 29 3 2023. [Online]. Available: 
https://www.youtube.com/watch?v=1bGmlN0Jriw. 
[Accessed 10 7 2023]. 
[6]  S. Al-Zhrani, N. M. Bedaiwai, I. F. El-Ramli, A. Z. 
Barasheed, A. Abduldaiem, Y. Al-Hadeethi and A. 
Umar, "Underwater Optical Communications: A 
Brief Overview and Recent Developments," 
Engineered Science, 2021.

 
Umar, "Underwater Optical Communications: A 
Brief Overview and Recent Developments," 
Engineered Science, 2021.  
 
 

